
server {
    listen 80;
    listen [::]:80;
    server_name payoor.store www.payoor.store api.payoor.store shop.payoor.store;

    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name www.payoor.store;

    ssl_certificate /etc/nginx/data/certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/data/certs/privkey.pem;

    return 301 https://shop.payoor.store$request_uri;
}


server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name payoor.store;

    ssl_certificate /etc/nginx/data/certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/data/certs/privkey.pem;

    return 301 https://shop.payoor.store$request_uri;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name shop.payoor.store;

    ssl_certificate /etc/nginx/data/certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/data/certs/privkey.pem;

    location / {
        proxy_pass http://shopui:8082/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        access_log /var/log/nginx/shopui_access.log;
        error_log /var/log/nginx/shopui_error.log debug;

        add_header 'Access-Control-Allow-Origin' "$cors_origin" always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }
}

upstream node_backend {
    server nodeserver:3001 max_fails=3 fail_timeout=10s;
    server nodeserver2:3001 max_fails=3 fail_timeout=10s;
    server nodeserver3:3001 max_fails=3 fail_timeout=10s;
}

# Load balance /api/ to 4 containers
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name api.payoor.store;

    ssl_certificate /etc/nginx/data/certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/data/certs/privkey.pem;

    location / {
        proxy_pass http://node_backend;  # üîÅ Load-balanced upstream
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        access_log /var/log/nginx/shopper_access.log;
        error_log /var/log/nginx/shopper_error.log debug;

        add_header 'Access-Control-Allow-Origin' "$cors_origin" always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' "$cors_origin" always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }
}

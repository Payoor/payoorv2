@mixin clearfix {
    &::after {
        content: "";
        display: table;
        clear: both;
    }
}

@mixin absCenter {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

// MEDIA QUERY MANAGER
/*
0 - 600px:      Phone
600 - 900px:    Tablet portrait
900 - 1200px:   Tablet landscape
[1200 - 1800] is where our normal styles apply
1800px + :      Big desktop

$breakpoint arguement choices:
- phone
- tab-port
- tab-land
- big-desktop

ORDER: Base + typography > general layout + grid > page layout > components

1em = 16px
*/
@mixin respond($breakpoint) {
    @if $breakpoint == phone {
        @media only screen and (max-width: 37.5em) {
            @content;
        } //600px
    }
    @if $breakpoint == tab-port {
        @media only screen and (max-width: 56.25em) {
            @content;
        } //900px
    }
    @if $breakpoint == tab-land {
        @media only screen and (max-width: 75em) {
            @content;
        } //1200px
    }
    @if $breakpoint == big-desktop {
        @media only screen and (min-width: 112.5em) {
            @content;
        } //1800
    }
}

@mixin hide-scrollbar {
    // Firefox
    scrollbar-width: none;

    // IE and Edge
    -ms-overflow-style: none;

    // Chrome, Safari, WebKit
    &::-webkit-scrollbar {
        height: 6px;
        display: none;
    }

    &::-webkit-scrollbar-thumb {
        background-color: transparent;
        border-radius: 10px;
        border: none;
    }

    &::-webkit-scrollbar-thumb:hover {
        background-color: transparent;
    }
}

@mixin fixed-header {
    position: fixed;
    top: 0;
    left: 0;
    z-index: 6;

    width: 100vw;

    &.unauth {
        background: transparent;
    }

    &.auth {
        background: transparent;

        @include respond(tab-port) {
            background: $white;
        }
    }
}

@mixin fixed-bottom-button-container {
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100%;
    z-index: 4;

    background: $white;
    padding: 1rem;
    padding-bottom: 2rem;

    display: flex;
    justify-content: center;

    &.column {
        flex-direction: column;
    }

    @include respond(tab-port) {
        display: block
    }

    button {
        font-size: 2rem;
        padding: 2rem;
        width: 100%;

        &.spacebetween {
            display: flex;
            justify-content: space-between;
        }

        &.transparent-button {
            margin-bottom: 2rem;
        }
    }
}

$breakpoints: (
    // Mobile devices
    "xxs": 280px,
    // Extra extra small devices (very small phones)
    "xs": 320px,
    // Extra small devices (small phones)
    "sm": 576px,

    // Small devices (large phones)
    // Tablets
    "md": 768px,
    // Medium devices (tablets)
    "md-lg": 896px,

    // Medium-large devices (large tablets)
    // Desktops
    "lg": 992px,
    // Large devices (small desktops)
    "lg-xl": 1100px,
    // Large to extra large transition
    "xl": 1200px,
    // Extra large devices (standard desktops)
    "xxl": 1400px,

    // Extra extra large devices (large desktops)
    // Larger screens
    "hd": 1600px,
    // HD displays
    "fhd": 1920px,
    // Full HD displays
    "wqhd": 2520px,
    // Wide Quad HD displays
    "4k": 3840px,
    // 4K displays
    "5k": 5120px,
    // 5K displays (Apple iMac, etc.)
    "8k": 7680px // 8K displays
);

@mixin breakpoint-down($size) {
    @if map-has-key($breakpoints, $size) {
        @media (min-width: map-get($breakpoints, $size) - 1) {
            @content;
        }
    } @else {
        @warn "Undefined breakpoint: #{$size}";
    }
}

@mixin section-header {
    &__header {
        color: $white;
        text-align: center;
        font-size: 5rem;
        font-weight: 400;
        margin-bottom: 6rem;

        @include respond(tab-port) {
            font-size: 3rem;
            margin-top: 6rem;
            margin-bottom: 6rem;
        }
    }
}

@mixin section {
    background: $primary-color;
    padding: 0 20rem;
    padding-top: 6rem;

    @include breakpoint-down(wqhd) {
        //padding: 0 54rem;
        padding-top: 6rem;
    }

    @include respond(tab-land) {
        padding: 0 10rem;
    }

    @include respond(tab-port) {
        padding: 1rem;
    }
}

@mixin floating($duration: 3s, $delay: 0s) {
    animation: float $duration ease-in-out infinite;
    animation-delay: $delay;
}
